version: '3.9'
services:
  discovery-service:
    container_name: discovery-service
    build:
      context: ../discovery-service-eric6166
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8761:8761"
    networks:
      - internal-network
    expose:
      - "8761"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 5s
      retries: 5
#    depends_on:
#      zipkin:
#        condition: service_started
  
  gateway-service:
    container_name: gateway-service
    build:
      context: ../gateway-service-eric6166
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8181:8181"
    expose:
      - "8181"
    networks:
      - internal-network
    depends_on:
      discovery-service:
        condition: service_started
#      zipkin:
#        condition: service_started
#      keycloak:
#        condition: service_healthy
  
  postgres-inventory:
    container_name: postgres-inventory
    image: postgres:14.9-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: inventory_service_v1
    ports:
      - "5434:5432"
    volumes:
      - postgres-inventory-data:/var/lib/postgresql/data
    networks:
      - internal-network
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 5s
      retries: 5

  inventory-service:
    container_name: inventory-service
    build:
      context: ../inventory-service-eric6166
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8083:8083"
    expose:
      - "8083"
    networks:
      - internal-network
    depends_on:
      postgres-inventory:
        condition: service_healthy
      discovery-service:
        condition: service_started
      gateway-service:
        condition: service_started
#      kafka:
#        condition: service_started
#      activemq:
#        condition: service_started
#      zipkin:
#        condition: service_started
#      keycloak:
#        condition: service_healthy
#      redis:
#        condition: service_healthy

networks:
  internal-network:

volumes:
  postgres-inventory-data:
#  postgres-product-data:
#  postgres-order-data:
#  postgres-payment-data:
#  postgres-user-data:
#  postgres-keycloak-data:
#  activemq-data:
#  activemq-log:
#  cache: